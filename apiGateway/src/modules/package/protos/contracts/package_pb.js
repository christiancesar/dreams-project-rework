// source: package.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
goog.object.extend(proto, google_protobuf_empty_pb);
goog.exportSymbol('proto.packagetrip.PackageSearch', null, global);
goog.exportSymbol('proto.packagetrip.PackageSearchRequest', null, global);
goog.exportSymbol('proto.packagetrip.PackageSearchResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.packagetrip.PackageSearch = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.packagetrip.PackageSearch, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.packagetrip.PackageSearch.displayName = 'proto.packagetrip.PackageSearch';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.packagetrip.PackageSearchResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.packagetrip.PackageSearchResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.packagetrip.PackageSearchResponse.displayName = 'proto.packagetrip.PackageSearchResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.packagetrip.PackageSearchRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.packagetrip.PackageSearchRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.packagetrip.PackageSearchRequest.displayName = 'proto.packagetrip.PackageSearchRequest';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.packagetrip.PackageSearch.prototype.toObject = function(opt_includeInstance) {
  return proto.packagetrip.PackageSearch.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.packagetrip.PackageSearch} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.packagetrip.PackageSearch.toObject = function(includeInstance, msg) {
  var f, obj = {
    originlocationcode: jspb.Message.getFieldWithDefault(msg, 1, ""),
    destinationlocationcode: jspb.Message.getFieldWithDefault(msg, 2, ""),
    departuredate: jspb.Message.getFieldWithDefault(msg, 3, ""),
    returndate: jspb.Message.getFieldWithDefault(msg, 4, ""),
    adults: jspb.Message.getFieldWithDefault(msg, 5, 0),
    children: jspb.Message.getFieldWithDefault(msg, 6, 0),
    infants: jspb.Message.getFieldWithDefault(msg, 7, 0),
    travelclass: jspb.Message.getFieldWithDefault(msg, 8, ""),
    roomquantity: jspb.Message.getFieldWithDefault(msg, 9, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.packagetrip.PackageSearch}
 */
proto.packagetrip.PackageSearch.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.packagetrip.PackageSearch;
  return proto.packagetrip.PackageSearch.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.packagetrip.PackageSearch} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.packagetrip.PackageSearch}
 */
proto.packagetrip.PackageSearch.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOriginlocationcode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDestinationlocationcode(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeparturedate(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setReturndate(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAdults(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setChildren(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setInfants(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setTravelclass(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRoomquantity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.packagetrip.PackageSearch.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.packagetrip.PackageSearch.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.packagetrip.PackageSearch} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.packagetrip.PackageSearch.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOriginlocationcode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDestinationlocationcode();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDeparturedate();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getReturndate();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getAdults();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getChildren();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getInfants();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = message.getTravelclass();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getRoomquantity();
  if (f !== 0) {
    writer.writeInt64(
      9,
      f
    );
  }
};


/**
 * optional string originLocationCode = 1;
 * @return {string}
 */
proto.packagetrip.PackageSearch.prototype.getOriginlocationcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.packagetrip.PackageSearch} returns this
 */
proto.packagetrip.PackageSearch.prototype.setOriginlocationcode = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string destinationLocationCode = 2;
 * @return {string}
 */
proto.packagetrip.PackageSearch.prototype.getDestinationlocationcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.packagetrip.PackageSearch} returns this
 */
proto.packagetrip.PackageSearch.prototype.setDestinationlocationcode = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string departureDate = 3;
 * @return {string}
 */
proto.packagetrip.PackageSearch.prototype.getDeparturedate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.packagetrip.PackageSearch} returns this
 */
proto.packagetrip.PackageSearch.prototype.setDeparturedate = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string returnDate = 4;
 * @return {string}
 */
proto.packagetrip.PackageSearch.prototype.getReturndate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.packagetrip.PackageSearch} returns this
 */
proto.packagetrip.PackageSearch.prototype.setReturndate = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int64 adults = 5;
 * @return {number}
 */
proto.packagetrip.PackageSearch.prototype.getAdults = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.packagetrip.PackageSearch} returns this
 */
proto.packagetrip.PackageSearch.prototype.setAdults = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int64 children = 6;
 * @return {number}
 */
proto.packagetrip.PackageSearch.prototype.getChildren = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.packagetrip.PackageSearch} returns this
 */
proto.packagetrip.PackageSearch.prototype.setChildren = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int64 infants = 7;
 * @return {number}
 */
proto.packagetrip.PackageSearch.prototype.getInfants = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.packagetrip.PackageSearch} returns this
 */
proto.packagetrip.PackageSearch.prototype.setInfants = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional string travelClass = 8;
 * @return {string}
 */
proto.packagetrip.PackageSearch.prototype.getTravelclass = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.packagetrip.PackageSearch} returns this
 */
proto.packagetrip.PackageSearch.prototype.setTravelclass = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional int64 roomQuantity = 9;
 * @return {number}
 */
proto.packagetrip.PackageSearch.prototype.getRoomquantity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.packagetrip.PackageSearch} returns this
 */
proto.packagetrip.PackageSearch.prototype.setRoomquantity = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.packagetrip.PackageSearchResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.packagetrip.PackageSearchResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.packagetrip.PackageSearchResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.packagetrip.PackageSearchResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    pb_package: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.packagetrip.PackageSearchResponse}
 */
proto.packagetrip.PackageSearchResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.packagetrip.PackageSearchResponse;
  return proto.packagetrip.PackageSearchResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.packagetrip.PackageSearchResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.packagetrip.PackageSearchResponse}
 */
proto.packagetrip.PackageSearchResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPackage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.packagetrip.PackageSearchResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.packagetrip.PackageSearchResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.packagetrip.PackageSearchResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.packagetrip.PackageSearchResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPackage();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string package = 1;
 * @return {string}
 */
proto.packagetrip.PackageSearchResponse.prototype.getPackage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.packagetrip.PackageSearchResponse} returns this
 */
proto.packagetrip.PackageSearchResponse.prototype.setPackage = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.packagetrip.PackageSearchRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.packagetrip.PackageSearchRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.packagetrip.PackageSearchRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.packagetrip.PackageSearchRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    packagesearch: (f = msg.getPackagesearch()) && proto.packagetrip.PackageSearch.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.packagetrip.PackageSearchRequest}
 */
proto.packagetrip.PackageSearchRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.packagetrip.PackageSearchRequest;
  return proto.packagetrip.PackageSearchRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.packagetrip.PackageSearchRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.packagetrip.PackageSearchRequest}
 */
proto.packagetrip.PackageSearchRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.packagetrip.PackageSearch;
      reader.readMessage(value,proto.packagetrip.PackageSearch.deserializeBinaryFromReader);
      msg.setPackagesearch(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.packagetrip.PackageSearchRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.packagetrip.PackageSearchRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.packagetrip.PackageSearchRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.packagetrip.PackageSearchRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPackagesearch();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.packagetrip.PackageSearch.serializeBinaryToWriter
    );
  }
};


/**
 * optional PackageSearch packageSearch = 1;
 * @return {?proto.packagetrip.PackageSearch}
 */
proto.packagetrip.PackageSearchRequest.prototype.getPackagesearch = function() {
  return /** @type{?proto.packagetrip.PackageSearch} */ (
    jspb.Message.getWrapperField(this, proto.packagetrip.PackageSearch, 1));
};


/**
 * @param {?proto.packagetrip.PackageSearch|undefined} value
 * @return {!proto.packagetrip.PackageSearchRequest} returns this
*/
proto.packagetrip.PackageSearchRequest.prototype.setPackagesearch = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.packagetrip.PackageSearchRequest} returns this
 */
proto.packagetrip.PackageSearchRequest.prototype.clearPackagesearch = function() {
  return this.setPackagesearch(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.packagetrip.PackageSearchRequest.prototype.hasPackagesearch = function() {
  return jspb.Message.getField(this, 1) != null;
};


goog.object.extend(exports, proto.packagetrip);
